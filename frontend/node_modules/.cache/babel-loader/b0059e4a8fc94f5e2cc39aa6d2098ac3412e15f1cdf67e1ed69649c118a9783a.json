{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\midni\\\\OneDrive\\\\Desktop\\\\CS-4800\\\\frontend\\\\src\\\\components\\\\Create.js\",\n  _s = $RefreshSig$();\nimport \"./Create.css\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n  const [form, setForm] = useState({\n    username: \"\",\n    password: \"\",\n    // confirmPassword: \"\",\n    type: \"\"\n  });\n  const [invalidMessage, setInvalidMessage] = useState(\"\");\n  const navigate = useNavigate();\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    // let passwordCheck = 1;\n    console.log(\"In onSubmit\");\n    console.log(form);\n\n    // check to make sure passwords match\n    // if (form.password.toString() === form.confirmPassword.toString()) {\n    //     passwordCheck = 0;\n    // } else {\n    //     console.log(\"Password error\");\n    //     setInvalidMessage(\"Passwords must match\");\n    //     passwordCheck = 1;\n    // }\n\n    // if(passwordCheck === 0) {\n    const newAccount = {\n      ...form\n    };\n    delete newAccount.message;\n    const response = await fetch(\"http://localhost:4000/accounts/create\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newAccount)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    const account = await response.json();\n    console.log(\"From create: \" + account.insertedId);\n    setForm({\n      username: \"\",\n      password: \"\",\n      type: \"\"\n    });\n    if (account.message == null) {\n      navigate(-1);\n    } else {\n      console.log(\"There is an error\");\n    }\n    //}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"New Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        className: \"form-label\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Please enter username\",\n        onChange: e => updateForm({\n          username: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"form-label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Please enter password\",\n        onChange: e => updateForm({\n          password: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"type\",\n        className: \"form-label\",\n        children: \"Account Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        id: \"type\",\n        onChange: e => updateForm({\n          type: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"business\",\n          selected: true,\n          children: \"Business\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"general\",\n          children: \"General\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"student\",\n          children: \"Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"travel\",\n          children: \"Travel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), invalidMessage]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n_s(Create, \"ZyC17TdQoGq7gMkHAjSOyJpTo3s=\", false, function () {\n  return [useNavigate];\n});\n_c = Create;\nvar _c;\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Create","_s","form","setForm","username","password","type","invalidMessage","setInvalidMessage","navigate","updateForm","value","prev","handleSubmit","e","preventDefault","console","log","newAccount","message","response","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","account","json","insertedId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","placeholder","onChange","target","required","name","id","selected","_c","$RefreshReg$"],"sources":["C:/Users/midni/OneDrive/Desktop/CS-4800/frontend/src/components/Create.js"],"sourcesContent":["import \"./Create.css\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Create() {\r\n\tconst [form, setForm] = useState({\r\n\t\tusername: \"\",\r\n\t\tpassword: \"\",\r\n\t\t// confirmPassword: \"\",\r\n\t\ttype: \"\",\r\n\t});\r\n\tconst [invalidMessage, setInvalidMessage] = useState(\"\");\r\n\tconst navigate = useNavigate();\r\n\r\n\tfunction updateForm(value) {\r\n\t\treturn setForm((prev) => {\r\n\t\t\treturn { ...prev, ...value };\r\n\t\t});\r\n\t}\r\n\r\n\tasync function handleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\t// let passwordCheck = 1;\r\n\t\tconsole.log(\"In onSubmit\");\r\n\t\tconsole.log(form);\r\n\r\n\t\t// check to make sure passwords match\r\n\t\t// if (form.password.toString() === form.confirmPassword.toString()) {\r\n\t\t//     passwordCheck = 0;\r\n\t\t// } else {\r\n\t\t//     console.log(\"Password error\");\r\n\t\t//     setInvalidMessage(\"Passwords must match\");\r\n\t\t//     passwordCheck = 1;\r\n\t\t// }\r\n\r\n\t\t// if(passwordCheck === 0) {\r\n\t\tconst newAccount = { ...form };\r\n\t\tdelete newAccount.message;\r\n\r\n\t\tconst response = await fetch(\"http://localhost:4000/accounts/create\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(newAccount),\r\n\t\t}).catch((error) => {\r\n\t\t\twindow.alert(error);\r\n\t\t\treturn;\r\n\t\t});\r\n\r\n\t\tconst account = await response.json();\r\n\r\n\t\tconsole.log(\"From create: \" + account.insertedId);\r\n\t\tsetForm({ username: \"\", password: \"\", type: \"\" });\r\n\r\n\t\tif (account.message == null) {\r\n\t\t\tnavigate(-1);\r\n\t\t} else {\r\n\t\t\tconsole.log(\"There is an error\");\r\n\t\t}\r\n\t\t//}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<h3>New Account</h3>\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<label htmlFor=\"username\" className=\"form-label\">\r\n\t\t\t\t\tUsername\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Please enter username\"\r\n\t\t\t\t\tonChange={(e) => updateForm({ username: e.target.value })}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<label htmlFor=\"password\" className=\"form-label\">\r\n\t\t\t\t\tPassword\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Please enter password\"\r\n\t\t\t\t\tonChange={(e) => updateForm({ password: e.target.value })}\r\n\t\t\t\t\trequired\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/* <label htmlFor=\"confirmPassword\" className=\"form-label\">Confirm Password</label>\r\n            <input type=\"text\" placeholder=\"Please confirm password\"\r\n            onChange={(e) => updateForm(e)} required/> */}\r\n\r\n\t\t\t\t<label htmlFor=\"type\" className=\"form-label\">\r\n\t\t\t\t\tAccount Type\r\n\t\t\t\t</label>\r\n\t\t\t\t<select\r\n\t\t\t\t\tname=\"type\"\r\n\t\t\t\t\tid=\"type\"\r\n\t\t\t\t\tonChange={(e) => updateForm({ type: e.target.value })}\r\n\t\t\t\t>\r\n\t\t\t\t\t<option value=\"business\" selected>Business</option>\r\n\t\t\t\t\t<option value=\"general\">General</option>\r\n\t\t\t\t\t<option value=\"student\">Student</option>\r\n\t\t\t\t\t<option value=\"travel\">Travel</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type=\"submit\" value=\"Create Account\" />\r\n\t\t\t</form>\r\n\t\t\t{invalidMessage}\r\n\t\t</div>\r\n\t);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}