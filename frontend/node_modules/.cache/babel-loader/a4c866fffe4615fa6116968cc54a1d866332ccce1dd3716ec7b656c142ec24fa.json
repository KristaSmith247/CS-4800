{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\midni\\\\OneDrive\\\\Desktop\\\\CS-4800\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport \"./Login.css\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [form, setForm] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [invalidMessage, setInvalidMessage] = useState('');\n  const navigate = useNavigate();\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  async function onSubmit(e) {\n    e.preventDefault();\n    const existingAccount = {\n      ...form\n    };\n    const response = await fetch(\"http://localhost:4000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(existingAccount)\n    }).catch(error => {\n      console.log(\"ERROR: Unable to fetch\");\n      window.alert(error);\n      return;\n    });\n    const account = await response.json();\n    setForm({\n      username: \"\",\n      password: \"\",\n      message: user.message\n    });\n    if (user.message == null) {\n      localStorage.setItem(\"username\", account._id);\n      localStorage.setItem(\"type\", account.type);\n      console.log(\"Logged in successfully\");\n      navigate(\"/account/\" + account._id);\n    }\n    setInvalidMessage(\"Invalid username or password. Please enter and try again.\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        className: \"form-label\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Please enter username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"form-label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Please enter password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        color: white\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create\",\n        className: \"create-button\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"18EP970+nAltRQPwUcOr/dK9Dww=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","jsxDEV","_jsxDEV","Login","_s","form","setForm","username","password","invalidMessage","setInvalidMessage","navigate","updateForm","value","prev","onSubmit","e","preventDefault","existingAccount","response","fetch","method","headers","body","JSON","stringify","catch","error","console","log","window","alert","account","json","message","user","localStorage","setItem","_id","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","placeholder","style","color","white","to","_c","$RefreshReg$"],"sources":["C:/Users/midni/OneDrive/Desktop/CS-4800/frontend/src/components/Login.js"],"sourcesContent":["import \"./Login.css\";\r\nimport React, {useState} from \"react\";\r\nimport {useNavigate} from \"react-router\";\r\nimport {Link } from \"react-router-dom\";\r\n\r\nfunction Login () {\r\n    const [form, setForm] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n    });\r\n    const [invalidMessage, setInvalidMessage] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    function updateForm(value) {\r\n        return setForm((prev) => {\r\n            return {...prev, ...value};\r\n        });\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const existingAccount = {...form};\r\n\r\n        const response = await fetch(\"http://localhost:4000/login\",\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(existingAccount),\r\n            })\r\n        .catch(error => {\r\n            console.log(\"ERROR: Unable to fetch\");\r\n            window.alert(error);\r\n            return;\r\n        });\r\n\r\n        const account = await response.json();\r\n\r\n        setForm({username: \"\", password: \"\", message: user.message });\r\n\r\n        if(user.message == null) {\r\n            localStorage.setItem(\"username\", account._id);\r\n            localStorage.setItem(\"type\", account.type);\r\n\r\n            console.log(\"Logged in successfully\");\r\n            navigate(\"/account/\" + account._id);\r\n        }\r\n\r\n        setInvalidMessage(\"Invalid username or password. Please enter and try again.\");\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n    <div className=\"container\">\r\n        <h3>Login</h3>\r\n        <form onSubmit={onSubmit}>\r\n            <label htmlFor=\"username\" className=\"form-label\">Username</label>\r\n            <input type=\"text\" placeholder=\"Please enter username\" />\r\n\r\n            <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n            <input type=\"text\" placeholder=\"Please enter password\" />\r\n\r\n            <br />\r\n            \r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n        <button style={{color: white}}>\r\n            <Link to=\"/create\" className=\"create-button\">Sign Up</Link>\r\n        </button>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}