{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\midni\\\\OneDrive\\\\Desktop\\\\CS-4800\\\\frontend\\\\src\\\\components\\\\Study.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useFetcher } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Study() {\n  _s();\n  const [word, setWord] = useState(\"\"); // word from database\n  const [testList, setTestList] = useState([\"si\", \"no\", \"azul\", \"verde\"]);\n  const mytestList = [['si', 'yes'], ['no', 'no'], ['azul', 'blue'], ['verde', 'green']];\n  const studentTestList = [['estudiante']];\n  function dynamicAccounts() {\n    // show account page based on account type\n    // retrieve account id\n    if (type === \"student\") {} else if (type === \"business\") {} else if (type === \"general\") {} else {}\n    ;\n  }\n\n  // useEffect(() => {\n  //     setWord(getWord(mytestList));\n  // }, [click]);\n\n  // const getWord = () => {\n  //     async function getVocabWord() {\n  //         const response = await fetch(``); // set up db\n  //         if (!response.ok) {\n  //             const message = `An error occurred: ${response.statusText}`;\n  //             window.alert(message);\n  //             return;\n  //         }\n\n  //         const word = await response.json();\n  //         setWord(word);\n  //     }\n\n  //     getVocabWord();\n  //     console.log(word);\n  // }\n\n  const getWord = sentArray => {\n    const toReturn = sentArray[Math.floor(Math.random() * mytestList.length)];\n    return toReturn;\n  };\n  function onClickHandler() {\n    setWord(getWord(mytestList));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"testList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickHandler,\n      children: \"Get Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vocabulary Practice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word\",\n      children: word[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word\",\n      children: word[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Study, \"3elFaU5gykXcM7biVPc61oGAtXk=\");\n_c = Study;\nvar _c;\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"names":["React","useState","useEffect","useFetcher","jsxDEV","_jsxDEV","Study","_s","word","setWord","testList","setTestList","mytestList","studentTestList","dynamicAccounts","type","getWord","sentArray","toReturn","Math","floor","random","length","onClickHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/midni/OneDrive/Desktop/CS-4800/frontend/src/components/Study.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useFetcher } from \"react-router-dom\";\r\n\r\nexport default function Study() {\r\n    const [word, setWord] = useState(\"\"); // word from database\r\n    const [testList, setTestList] = useState([\"si\", \"no\", \"azul\", \"verde\"]);\r\n\r\n    const mytestList = [['si', 'yes'], ['no', 'no'], ['azul', 'blue'], ['verde', 'green']];\r\n    const studentTestList = [['estudiante']]\r\n    function dynamicAccounts() {\r\n        // show account page based on account type\r\n        // retrieve account id\r\n        if (type === \"student\") {\r\n\r\n        } else if (type === \"business\") {\r\n\r\n        } else if (type === \"general\") {\r\n\r\n        } else {\r\n\r\n        };\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     setWord(getWord(mytestList));\r\n    // }, [click]);\r\n\r\n    // const getWord = () => {\r\n    //     async function getVocabWord() {\r\n    //         const response = await fetch(``); // set up db\r\n    //         if (!response.ok) {\r\n    //             const message = `An error occurred: ${response.statusText}`;\r\n    //             window.alert(message);\r\n    //             return;\r\n    //         }\r\n\r\n    //         const word = await response.json();\r\n    //         setWord(word);\r\n    //     }\r\n\r\n    //     getVocabWord();\r\n    //     console.log(word);\r\n    // }\r\n\r\n    const getWord = (sentArray) => {\r\n        const toReturn = sentArray[Math.floor(Math.random() * mytestList.length)];\r\n        return toReturn;\r\n    }\r\n\r\n    function onClickHandler() {\r\n        setWord(getWord(mytestList));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <p>testList</p>\r\n            <button onClick={onClickHandler}>Get Word</button>\r\n            <h1>Vocabulary Practice</h1>\r\n            <div className=\"word\">{word[0]}</div>\r\n            <div className=\"word\">{word[1]}</div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;EAEvE,MAAMW,UAAU,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;EACtF,MAAMC,eAAe,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;EACxC,SAASC,eAAeA,CAAA,EAAG;IACvB;IACA;IACA,IAAIC,IAAI,KAAK,SAAS,EAAE,CAExB,CAAC,MAAM,IAAIA,IAAI,KAAK,UAAU,EAAE,CAEhC,CAAC,MAAM,IAAIA,IAAI,KAAK,SAAS,EAAE,CAE/B,CAAC,MAAM,CAEP;IAAC;EACL;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAMC,OAAO,GAAIC,SAAS,IAAK;IAC3B,MAAMC,QAAQ,GAAGD,SAAS,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,UAAU,CAACU,MAAM,CAAC,CAAC;IACzE,OAAOJ,QAAQ;EACnB,CAAC;EAED,SAASK,cAAcA,CAAA,EAAG;IACtBd,OAAO,CAACO,OAAO,CAACJ,UAAU,CAAC,CAAC;EAChC;EAEA,oBACIP,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBpB,OAAA;MAAAoB,QAAA,EAAG;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACfxB,OAAA;MAAQyB,OAAO,EAAEP,cAAe;MAAAE,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClDxB,OAAA;MAAAoB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BxB,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEjB,IAAI,CAAC,CAAC;IAAC;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrCxB,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAEjB,IAAI,CAAC,CAAC;IAAC;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEd;AAACtB,EAAA,CA3DuBD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}